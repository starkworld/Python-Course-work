"""
Created on Monday 18 feb 16:53:34 2020

@author: nkalyanðŸ¤ 
        '''Implementing Python programs for Iterators, Sequences and loops '''
"""

import random
from typing import Any, Optional, Sequence, Iterator


def count_vowels(string: str) -> int:
    ''' return the number of vowels in the string s '''
    vowels: int = 0
    for i in string.lower():
        if i in 'aeiou':
            vowels += 1
    return vowels


def find_last(target: Any, seq: Sequence[Any]) -> Optional[Any]:
    ''' return the offset from 0 of the last occurrence of target in seq '''
    count = 0
    for i in reversed(range(len(seq))):
        if seq[i] == target:
            count += 1
            return i
    else:
        return None


def my_enumerate(sequence: Sequence[Any]) -> Iterator[Any]:
    """ emulate the behavior of Python's built in enumerate() function.
        For each call, return a tuple with the offset from 0 and the next item
    """
    for i in range(len(sequence)):
        result: Sequence = sequence[i]
        yield i, result


def random_int_gen(minimum: int, maximum: int) -> Iterator[Any]:
    """Generates random Values"""
    while True:
        yield random.randint(minimum, maximum)


def test_gen():
    """test the random generator"""
    domain: str = input('number: ')
    for i in range(0, int(domain)):
        print(next(random_int_gen(0, 10)))
        print(random_int_gen(0, 10))


def find_target(target, minimum, maximum, limit) -> (str, int):
    """Function for the finding the target value that generated by random function"""
    if not (isinstance(target, int) and isinstance(minimum, int) and isinstance(maximum, int) and isinstance(limit, int)):
        raise ValueError('One of your inputs is not right. \n')

    gen = random_int_gen(minimum, maximum)
    for i in range(0, limit):
        if target == next(gen):
            return i
            break
    return f'Not found {i} in  {str(limit)}  times. '


def main() -> None:
    """ This performs Calling and printing Outputs/results """
    string1: str = input("Enter your string to count no. of vowels in it: ")
    result = count_vowels(string1)
    print(result)
    sequence1: Sequence[Any] = input("Enter your input for generating it's offset values: ")
    print(my_enumerate(sequence1))
    try:
        print("Last occurrence value index and times the value exists are: ", find_last('y', 'pyyython'))
        print("Last occurrence value index  times the value exists are: ", find_last('x', 'Nikhil'))
        print("Last occurrence value index  times the value exists are: ", find_last('Jon', ['Mosh', 'Catherine', 'Jon', 12]))
    except NameError:
        print("Name of target or seq not defined")
    while True:
        quit = input("Enter 'quit' to quit, others to continue. ")
        if quit == 'quit':
            exit()
        target = int(input("Input target: "))
        minimum = int(input("Input min_value: "))
        maximum = int(input("Input max_value: "))
        limit = int(input("Input limit of loops: "))
        try:
            print(find_target(target, minimum, maximum, limit))
        except ValueError as e:
            print(e)


if __name__ == '__main__':
    """""Calls the functions to perform operations"""
    main()